services:
  opensearch:
    image: 'opensearchproject/opensearch:latest'
    container_name: metagit-opensearch-mt
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms512m -Xmx512m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - "9200:9200"
      - "9600:9600"
    volumes:
      - opensearch-mt-data:/usr/share/opensearch/data
    networks:
      - metagit-mt-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:latest
    container_name: metagit-dashboards-mt
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    ports:
      - "5601:5601"
    networks:
      - metagit-mt-net
    depends_on:
      opensearch:
        condition: service_healthy

  # Metagit API with multi-tenancy enabled
  metagit-api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: metagit-api-mt
    environment:
      # OpenSearch configuration
      - OPENSEARCH_HOST=opensearch
      - OPENSEARCH_PORT=9200
      - OPENSEARCH_INDEX=metagit-records
      - OPENSEARCH_USE_SSL=false
      - OPENSEARCH_VERIFY_CERTS=false
      
      # API configuration
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_DEBUG=true
      - MAX_CONCURRENT_JOBS=5
      
      # Multi-tenant configuration
      - METAGIT_TENANT_ENABLED=true
      - METAGIT_TENANT_DEFAULT=default
      - METAGIT_TENANT_HEADER=X-Tenant-ID
      - METAGIT_TENANT_REQUIRED=true
      - METAGIT_TENANT_ALLOWED=tenant-a,tenant-b,tenant-c,default
      
      # Provider tokens (optional)
      - GITHUB_TOKEN=${GITHUB_TOKEN:-}
      - GITLAB_TOKEN=${GITLAB_TOKEN:-}
      
      # Logging
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    volumes:
      # Mount multi-tenant configuration
      - ./examples/tenant_config_example.yml:/app/metagit.config.yaml:ro
      # Mount environment file if exists
      - ./.env:/app/.env:ro
    networks:
      - metagit-mt-net
    depends_on:
      opensearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s
    restart: unless-stopped

  # Example client for testing multi-tenancy
  metagit-client:
    image: curlimages/curl:latest
    container_name: metagit-client-mt
    networks:
      - metagit-mt-net
    depends_on:
      metagit-api:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for API to be ready...' &&
        sleep 10 &&
        echo 'Testing multi-tenant API...' &&
        echo '1. Testing tenant-a detection submission:' &&
        curl -X POST 'http://metagit-api:8000/detect/submit' \
          -H 'Content-Type: application/json' \
          -H 'X-Tenant-ID: tenant-a' \
          -d '{\"repository_url\": \"https://github.com/octocat/Hello-World\"}' &&
        echo '' &&
        echo '2. Testing tenant-b detection submission:' &&
        curl -X POST 'http://metagit-api:8000/detect/submit' \
          -H 'Content-Type: application/json' \
          -H 'X-Tenant-ID: tenant-b' \
          -d '{\"repository_url\": \"https://github.com/octocat/Spoon-Knife\"}' &&
        echo '' &&
        echo '3. Testing unauthorized tenant (should fail):' &&
        curl -X POST 'http://metagit-api:8000/detect/submit' \
          -H 'Content-Type: application/json' \
          -H 'X-Tenant-ID: unauthorized-tenant' \
          -d '{\"repository_url\": \"https://github.com/octocat/test\"}' &&
        echo '' &&
        echo '4. Testing missing tenant (should fail):' &&
        curl -X POST 'http://metagit-api:8000/detect/submit' \
          -H 'Content-Type: application/json' \
          -d '{\"repository_url\": \"https://github.com/octocat/test\"}' &&
        echo '' &&
        echo 'Multi-tenant API test completed!'
      "

  # Simple web interface for testing (optional)
  metagit-web:
    image: nginx:alpine
    container_name: metagit-web-mt
    ports:
      - "8080:80"
    volumes:
      - ./docker/nginx-mt.conf:/etc/nginx/nginx.conf:ro
      - ./docker/html-mt:/usr/share/nginx/html:ro
    networks:
      - metagit-mt-net
    depends_on:
      - metagit-api
    restart: unless-stopped

volumes:
  opensearch-mt-data:
    driver: local

networks:
  metagit-mt-net:
    driver: bridge 