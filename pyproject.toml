[project]
name = "metagit-ai"
version = "0.1.0"
description = "Metagit-ai multi-repo management tool"
readme = "README.md"
license = {file = "LICENSE"}
url = "https://metagit.ai"
authors = [
    {name = "Zachary Loeber", email = "zloeber@gmail.com"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
requires-python = ">=3.12"
dependencies = [
    "logging>=0.4.9.6",
    "loguru>=0.7.3",
    "pydantic>=2.11.4",
    "requests>=2.32.3",
    "click>=8.1.7",
    "dotenv>=0.9.9",
    "gitpython>=3.1.44",
    "rich>=14.0.0",
    "pyyaml>=6.0.2",
    "pygithub>=2.6.1",
    "jsonschema>=4.24.0",
    "python-dotenv>=1.1.0",
    "rapidfuzz>=3.13.0",
    "prompt-toolkit>=3.0.51",
    "tqdm>=4.66.4",
    "types-tqdm>=4.67.0.20250516",
    "aiofiles>=23.2.1",
]

[project.optional-dependencies]
standard = ["crewai[tools]"]
test = ["pytest", "pytest-cov", "mypy", "ruff", "httpx", "pytest-asyncio"]
dev = ["ruff", "black", "isort", "mypy"]
docs = ["mkdocs", "mkdocs-material", "mkdocstrings", "mkdocs-click", "mdtoc"]
lint = ["ruff", "black", "isort", "mypy"]
format = ["black", "isort"]
typecheck = ["mypy"]
api = ["opensearch-py>=2.4.0", "aiofiles>=23.2.1", "fastapi>=0.104.1", "uvicorn[standard]>=0.24.0" ]

[project.scripts]
metagit = "metagit.cli.main:main"
metagit-api = "metagit.api.app:main"

[lint]
select = ['E', 'W', 'F', 'I', 'B', 'C4', 'ARG', 'SIM']
ignore = ['W291', 'W292', 'W293', 'E501', 'SIM115']

[tool.ruff]
exclude = [".venv", "records", ".metagit", "examples", "docs", "tests", "metagit/api/endpoints"]

[dependency-groups]
dev = [
    "mypy>=1.16.1",
    "ruff>=0.11.11",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["metagit*"]
exclude = ["metagit.tests*"]
namespaces = false
