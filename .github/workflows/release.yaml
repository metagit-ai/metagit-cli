name: Publish Python üêç distribution üì¶ to PyPI and TestPyPI

on:
  push:
  #   tags:
  #     - 'v*.*.*'
  # workflow_dispatch:
  #   inputs:
  #     version:
  #       description: 'Version to release (e.g. v0.1.0)'
  #       required: true
  #       default: ''

env:
  PROJECT_NAME: metagit-cli

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: Build distribution üì¶
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
#          cache: pip
#          cache-dependency-path: setup.py

      - name: Install dependencies
        run: |
          pip install uv
          uv sync

      - name: Build package
        run: |
          uv build
      
      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/

  publish-to-pypi:
    name: Publish Python üêç distribution üì¶ to PyPI
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # only publish to PyPI on tag pushes
    needs: build
    permissions:
      id-token: write # IMPORTANT: this permission is mandatory for trusted publishing
    environment:
      name: production
      url: https://pypi.org/p/${{ env.PROJECT_NAME }}
    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/

      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  publish-to-testpypi:
    name: Publish Python üêç distribution üì¶ to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ env.PROJECT_NAME }}

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: dist-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/
    - name: Publish distribution üì¶ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  create-release:
    name: Create Release - ${{ github.ref_name }}
    runs-on: ubuntu-latest
    needs: publish-to-pypi
    if: startsWith(github.ref, 'refs/tags/')  # only publish release to GitHub on tag pushes
    steps:
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          tag: ${{ github.ref_name }}
    
      # - name: Build Artifact Upload
      #   if: matrix.python-version == '3.13' && matrix.os == 'ubuntu-latest'
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: dist-${{ matrix.os }}-${{ matrix.python-version }}
      #     path: dist/*